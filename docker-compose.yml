version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: content_moderator_db
    environment:
      POSTGRES_DB: content_moderator
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d content_moderator"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # FastAPI Application
  api:
    build: .
    container_name: content_moderator_api
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/content_moderator
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - BREVO_API_KEY=${BREVO_API_KEY}
      - BREVO_SENDER_EMAIL=${BREVO_SENDER_EMAIL}
      - DEBUG=False
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - app_network
    restart: unless-stopped

  # Redis (for future use with Celery)
  redis:
    image: redis:7-alpine
    container_name: content_moderator_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  app_network:
    driver: bridge



